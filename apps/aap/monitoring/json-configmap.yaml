apiVersion: v1
kind: ConfigMap
metadata:
  name: json-exporter-config
  labels:
    app: json-exporter
data:
  config.yml: |
    modules:
      default:
        http_client_config:
          tls_config:
            insecure_skip_verify: true
          basic_auth:
            username: admin
            password_file: /etc/json-exporter/secrets/admin-password
        metrics:
          - name: aap_overall_status
            type: object
            help: Overall status of the AAP deployment.
            path: '{ $ }'
            labels:
              status: '{.status}'
            values:
              value: 1

          # Metric for the status of each major service
          - name: aap_service_status
            type: object
            help: Status of individual AAP services.
            path: '{.services[*]}'
            labels:
              service: '{.service_name}'
              status: '{.status}'
            values:
              value: 1

          # Metrics for the status of each node within the 'controller' service
          - name: aap_service_node_status
            type: object
            help: Status of individual AAP service nodes.
            path: '{.services[?(@.service_name=="controller")].nodes.*}'
            labels:
              service: 'controller'
              node: '{.url}'
              status: '{.status}'
            values:
              value: 1

          # Metrics for the status of each node within the 'hub' service
          - name: aap_service_node_status
            type: object
            help: Status of individual AAP service nodes.
            path: '{.services[?(@.service_name=="hub")].nodes.*}'
            labels:
              service: 'hub'
              node: '{.url}'
              status: '{.status}'
            values:
              value: 1

          # Metrics for the status of each node within the 'eda' service
          - name: aap_service_node_status
            type: object
            help: Status of individual AAP service nodes.
            path: '{.services[?(@.service_name=="eda")].nodes.*}'
            labels:
              service: 'eda'
              node: '{.url}'
              status: '{.status}'
            values:
              value: 1

          # Metric for the connection status of each redis node
          - name: aap_redis_node_connected
            type: object
            help: Connection status of individual Redis nodes.
            path: '{.services[?(@.service_name=="redis")].nodes.*}'
            labels:
              # FIX: Relying on 'node_id' as the unique identifier
              node_id: '{.node_id}'
              flags: '{.flags}'
              connected: '{.connected}'
            values:
              value: 1

          # Metric for running controller instances
          - name: aap_controller_instance_running
            type: object
            help: Running status of AAP controller instances. Value is 1 if present in the list.
            path: '{.services[?(@.service_name=="controller")].nodes.*.response.instances[*]}'
            labels:
              instance_node: '{.node}'
              instance_uuid: '{.uuid}'
              instance_type: '{.node_type}'
            values:
              value: 1
              capacity: '{.capacity}'

          # Metric for Hub database connection status
          - name: aap_hub_database_connection_status
            type: object
            help: Status of the hub''s database connection.
            path: '{.services[?(@.service_name=="hub")].nodes.*}'
            labels:
              node: '{.url}'
              connected: '{.response.database_connection.connected}'
            values:
              value: 1

          # Metric for Hub Redis connection status
          - name: aap_hub_redis_connection_status
            type: object
            help: Status of the hub''s redis connection.
            path: '{.services[?(@.service_name=="hub")].nodes.*}'
            labels:
              node: '{.url}'
              connected: '{.response.redis_connection.connected}'
            values:
              value: 1

          # Informational metric for Hub component versions
          - name: aap_hub_component_info
            type: object
            help: Version information for hub components.
            path: '{.services[?(@.service_name=="hub")].nodes.*.response.versions[*]}'
            labels:
              component: '{.component}'
              version: '{.version}'
              package: '{.package}'
            values:
              value: 1

          # Metrics for online Hub workers and apps
          - name: aap_hub_online_worker_status
            type: object
            help: Status of online hub workers. Value is 1 if online.
            path: '{.services[?(@.service_name=="hub")].nodes.*.response.online_workers[*]}'
            labels:
              worker_name: '{.name}'
            values:
              value: 1

          - name: aap_hub_online_api_app_status
            type: object
            help: Status of online hub API apps. Value is 1 if online.
            path: '{.services[?(@.service_name=="hub")].nodes.*.response.online_api_apps[*]}'
            labels:
              api_app_name: '{.name}'
            values:
              value: 1

          - name: aap_hub_online_content_app_status
            type: object
            help: Status of online hub content apps. Value is 1 if online.
            path: '{.services[?(@.service_name=="hub")].nodes.*.response.online_content_apps[*]}'
            labels:
              content_app_name: '{.name}'
            values:
              value: 1

          # Metrics for the overall Redis Cluster
          - name: aap_redis_cluster_status
            type: object
            help: Overall status of the Redis cluster.
            path: '{.services[?(@.service_name=="redis")].response}'
            labels:
              cluster_state: '{.cluster_info.cluster_state}'
            values:
              value: 1

          # Numeric metrics from the Redis cluster info
          - name: aap_redis_cluster_info
            type: object
            help: Numeric statistics for the Redis cluster.
            path: '{.services[?(@.service_name=="redis")].response.cluster_info}'
            labels: {}
            values:
              slots_assigned: '{.cluster_slots_assigned}'
              slots_ok: '{.cluster_slots_ok}'
              slots_fail: '{.cluster_slots_fail}'
              known_nodes: '{.cluster_known_nodes}'
              size: '{.cluster_size}'
